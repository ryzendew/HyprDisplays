name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.0.1)'
        required: true
        default: '0.0.1'

permissions:
  contents: write
  packages: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Qt environment
      run: |
        echo "Using system Qt6 packages"
        qmake6 --version || echo "qmake6 not found, will use cmake to find Qt6"

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential pkg-config wayland-protocols qt6-base-dev qt6-tools-dev zip

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: |
        cd build
        make -j$(nproc)

    - name: Create Release Package
      run: |
        cd build
        
        # Create a simple release directory
        mkdir -p HyprDisplays-${{ github.event.inputs.version || github.ref_name }}
        cd HyprDisplays-${{ github.event.inputs.version || github.ref_name }}
        
        # Copy the executable
        cp ../hyprdisplays .
        
        # Copy desktop file and icon
        cp ../../hyprdisplays.desktop .
        cp ../../hyprdisplays.svg .
        
        # Create a simple install script
        cat > install.sh << 'EOF'
        #!/bin/bash
        echo "Installing HyprDisplays..."
        
        # Copy executable to /usr/local/bin
        sudo cp hyprdisplays /usr/local/bin/
        sudo chmod +x /usr/local/bin/hyprdisplays
        
        # Copy desktop file
        sudo cp hyprdisplays.desktop /usr/share/applications/
        
        # Copy icon
        sudo mkdir -p /usr/share/icons/hicolor/scalable/apps/
        sudo cp hyprdisplays.svg /usr/share/icons/hicolor/scalable/apps/
        
        echo "HyprDisplays installed successfully!"
        echo "You can now run it from your application menu or by typing 'hyprdisplays'"
        EOF
        chmod +x install.sh
        
        # Create a simple run script
        cat > run.sh << 'EOF'
        #!/bin/bash
        # Simple script to run HyprDisplays
        ./hyprdisplays "$@"
        EOF
        chmod +x run.sh
        
        # Create README
        cat > README.txt << 'EOF'
        HyprDisplays ${{ github.event.inputs.version || github.ref_name }}
        
        A Qt6-based graphical utility for managing monitors in Hyprland.
        
        INSTALLATION:
        Option 1 - System install:
          sudo ./install.sh
        
        Option 2 - Run directly:
          ./run.sh
        
        DEPENDENCIES:
        - Qt6 runtime libraries
        - Hyprland with hyprctl
        - Wayland environment
        
        FEATURES:
        - Drag-and-drop monitor arrangement
        - Advanced Hyprland options (HDR, 10-bit, wide gamut, VRR)
        - Real-time position editing
        - Native Hyprland config format
        EOF
        
        cd ..
        
        # Create zip file
        zip -r HyprDisplays-${{ github.event.inputs.version || github.ref_name }}.zip HyprDisplays-${{ github.event.inputs.version || github.ref_name }}/
        
        echo "Release package created successfully"
        ls -la *.zip

    - name: Upload Release Package
      uses: actions/upload-artifact@v4
      with:
        name: HyprDisplays-${{ github.event.inputs.version || github.ref_name }}
        path: build/HyprDisplays-${{ github.event.inputs.version || github.ref_name }}.zip

  create-release:
    needs: build-linux
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event.inputs.version
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Debug Release Info
      run: |
        echo "GitHub ref: ${{ github.ref }}"
        echo "GitHub ref name: ${{ github.ref_name }}"
        echo "Event inputs version: ${{ github.event.inputs.version }}"
        echo "Tag name will be: ${{ github.event.inputs.version && format('v{0}', github.event.inputs.version) || github.ref_name }}"
        echo "Release name will be: HyprDisplays ${{ github.event.inputs.version || github.ref_name }}"
        ls -la artifacts/
        
    - name: Create Release
      run: |
        # Create release using GitHub CLI
        gh release create ${{ github.event.inputs.version && format('v{0}', github.event.inputs.version) || github.ref_name }} \
          --title "HyprDisplays ${{ github.event.inputs.version || github.ref_name }}" \
          --notes "## HyprDisplays ${{ github.event.inputs.version || github.ref_name }}
          
          ### Alpha Release
          
          This is an alpha release of HyprDisplays, a Qt6-based graphical utility for managing monitors in Hyprland.
          
          ### Features
          - Drag-and-drop monitor arrangement
          - Advanced Hyprland options (HDR, 10-bit, wide gamut, VRR)
          - Real-time position editing
          - Native Hyprland config format
          
          ### Installation
          
          Download the release package and extract it:
          \`\`\`bash
          unzip HyprDisplays-*.zip
          cd HyprDisplays-*
          \`\`\`
          
          **Option 1: System install**
          \`\`\`bash
          sudo ./install.sh
          \`\`\`
          
          **Option 2: Run directly**
          \`\`\`bash
          ./run.sh
          \`\`\`
          
          ### Building from Source
          \`\`\`bash
          git clone https://github.com/${{ github.repository }}.git
          cd HyprDisplays
          mkdir build && cd build
          cmake ..
          make -j\$(nproc)
          \`\`\`
          
          ### Dependencies
          - Qt6
          - Hyprland
          - CMake
          - C++17 compiler" \
          --prerelease \
          artifacts/HyprDisplays-${{ github.event.inputs.version || github.ref_name }}/HyprDisplays-${{ github.event.inputs.version || github.ref_name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 